@RequestMapping(value = "/report/getappendedPagesReportData", method = RequestMethod.GET)
	public @ResponseBody String getappendedPagesData(HttpServletRequest request) {

		String jsonData = null;
		String SearchedData = null;
		String tempCaseType = null;
		Boolean flag = true;
		String ct_temp = "";
		String fromDt = request.getParameter("fromDate");
		String toDt = request.getParameter("toDate");
		String vendor_id = request.getParameter("team_id");

		System.out.println("From Date=" + fromDt + " toDate= " + toDt);
		List<DailyActivityReport> workProgressList = new ArrayList<DailyActivityReport>();
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		Calendar cal = Calendar.getInstance();

		try {
			Date fromDate = formatter.parse(fromDt);

			Date toDate = formatter.parse(toDt);	

			cal.setTime(fromDate);

			DailyActivityReport dar = new DailyActivityReport();

			String b = new SimpleDateFormat("yyyy-MM-dd").format(fromDate);
			// String b= new SimpleDateFormat("EEE, MMM d, ''yyyy").format(fromDate);
			dar.setValue1("" + b);
			Integer closingBalance = 0;

			while (!fromDate.after(toDate)) {

				Integer noOfFileCount = reportsService.getNoOfFileCount(fromDt, vendor_id);
				Integer previousCountScan = reportsService.getPreviousScanPageCount(fromDt, vendor_id);
				Integer verifierApproved = reportsService.getverifierApproved1(vendor_id, fromDt);  //For Use Of Getting Details After VErifier approve stage
				Integer currentCountScan = reportsService.getCurrentScanPageCount(fromDt, vendor_id);
				Integer newlyCountScan = reportsService.getNewlyAddedScanPageCount(fromDt, vendor_id);

				dar.setValue2("" + noOfFileCount);
				dar.setValue3("" + previousCountScan);
				dar.setValue4("" + currentCountScan);
				dar.setValue5("" + newlyCountScan);
				dar.setValue6("" +verifierApproved);

				cal.add(Calendar.DATE, 1);
				fromDate = formatter.parse(formatter.format(cal.getTime()));
				fromDt = formatter.format(fromDate);
				workProgressList.add(dar);
				dar = new DailyActivityReport();

				b = new SimpleDateFormat("yyyy-MM-dd").format(fromDate);
				// b= new SimpleDateFormat("EEE, MMM d, ''yyyy").format(fromDate);

				/* System.out.println("Date in workprogress : " +b); */
				dar.setValue1("" + b);
				dar.setValue2("" + closingBalance);

			}

		} catch (ParseException e) {
// TODO Auto-generated catch block
			e.printStackTrace();
		}

		ActionResponse<DailyActivityReport> response = new ActionResponse();

		response.setModelList(workProgressList);

		if (workProgressList != null) {
			response.setResponse("TRUE");
			jsonData = commenMethod.convert_to_json(response);
		} else {
			response.setResponse("FALSE");
		}

		return jsonData;

	}





















	$scope.getDigitizationReportData = function(um_vendor_id) 
	{
			var btn = $("#submit");
			$scope.buttonDisabled = true;
			var click_time = new Date();
			$scope.casefile=[];
			$scope.dailyreportListData=[];
			$scope.count2=0;
			$scope.count3=0;
			$scope.count4=0;
			$scope.count5=0;
	
			console.log("$scope.um_vendor_id : "+$scope.model.fromDate);
			console.log("$scope.um_vendor_id : "+$scope.model.toDate);
			console.log("$scope.um_vendor_id : "+$scope.um_vendor_id);
			/*var date = new Date($scope.model.fromDate);
			var date1=new Date($scope.todate);*/
			if($scope.um_vendor_id==null ||  $scope.um_vendor_id==0){
				$scope.um_vendor_id=null;
			}
			if($scope.model.fromDate!=null){
				$scope.model.fromDate=convertDate($scope.model.fromDate);
			}
			if($scope.model.toDate!=null){
				$scope.model.toDate=convertDate($scope.model.toDate);
			}			
			
			$http.get('/pdms/report/getappendedPagesReportData',{params: {'team_id':$scope.um_vendor_id,
				'fromDate':$scope.model.fromDate,'toDate':$scope.model.toDate}}).success(function(data,status,header,config)
			{   
					debugger;
					console.log("-----------"+data.modelList);
					$scope.buttonDisabled = false;				
					
					$scope.ReportData=data.modelList;
					$scope.displayedCollection= [].concat($scope.ReportData);
					console.log("----********AppendedPagesReportData*******------")
					 
					console.log($scope.ReportData);
				$scope.dailyreportListData=[];
					
					$scope.count2=0;
					$scope.count3=0;
					$scope.count4=0;
					$scope.count5=0;
					var temp;
					$
					
			
		$scope.dailyreportList = {
							
							'parameter1':'Date',
							'parameter2':'No of File',
							'parameter3':'Previous Page Count',
							'parameter4':'Current Page Count',
							'parameter5':'Number of Pages Added'
						,
					              };
					$scope.dailyreportListData.push($scope.dailyreportList);
					
					for(var i=0;i<data.modelList.length;i++)
					{
						$scope.count2+=parseInt(data.modelList[i].value2);
						$scope.count3+=parseInt(data.modelList[i].value3);
						$scope.count4+=parseInt(data.modelList[i].value4);
						$scope.count5+=parseInt(data.modelList[i].value5);
						var splitDate=$scope.displayedCollection[i].value1.split("/");
						var newDate=splitDate[2]+"-"+splitDate[1]+"-"+splitDate[0];
						var date1=new Date(newDate);
						
					$scope.dailyreportList = {
							
							'parameter1':$filter('date')(new Date(date1),'MM/dd/yyyy'),
							'parameter2':$scope.displayedCollection[i].value2,
							'parameter3':$scope.displayedCollection[i].value3,
							'parameter4':$scope.displayedCollection[i].value4,
							'parameter5':$scope.displayedCollection[i].value5,
					};					
						$scope.dailyreportListData.push($scope.dailyreportList);
							
					}
					
					$scope.dailyreportList = {
							
							'parameter1':'Total',
							'parameter2':$scope.count2,
							'parameter3':$scope.count3,							 
							'parameter4':$scope.count4,
							'parameter5':$scope.count5,
					};
					$scope.dailyreportListData.push($scope.dailyreportList);
								
			}).error(function(data, status, headers, config) 
				{
					console.log("Error in getting Report ");
				});
		};

















@RequestMapping(value = "/report/getProductivityReportData", method = RequestMethod.GET)
	public @ResponseBody String getProductivityReportdata(HttpServletRequest request, HttpSession session) {
		// System.out.println("CommonReportsController.getProductivityReportdata()");
		String jsonData = null;
		String fromDt = request.getParameter("fromDate");
		String toDt = request.getParameter("toDate");
		String report_id = request.getParameter("report_id");
		System.out.println("CommonReportsController.getProductivityReportdata() report_id= " + report_id);
		String shift_id = request.getParameter("shift_id");
		System.out.println("CommonReportsController.getProductivityReportdata() shift_id= " + shift_id);
		String FileType_id = request.getParameter("FileType_id");
		System.out.println("CommonReportsController.getProductivityReportdata() FileType_id= " + FileType_id);
		String vendor_id = null;
		User user = (User) session.getAttribute("USER");
		System.out.println("CommonReportsController.getProductivityReportdata() user= " + user.getUsername());
		Long um_id = user.getUm_id();
		// System.out.println("CommonReportsController.getProductivityReportdata()
		// um_id= " + um_id);
		if (shift_id.equals("1")) {
			fromDt = fromDt + " 07:30:00.1";
			toDt = toDt + " 19:30:00.1";
		} else if (shift_id.equals("2")) {
			fromDt = fromDt + " 19:30:00.1";
			toDt = toDt + " 07:30:00.1";
		} else if (shift_id.equals("0") || null == shift_id) {
			fromDt = fromDt + " 07:30:00.1";
			toDt = toDt + " 07:30:00.1";
		}

		if (null == FileType_id) {
			FileType_id = "351416,351417";
		}

		///////////////
		if (user.getUm_vendor_id() == null) {
			vendor_id = request.getParameter("ta_vendor_id");
		} else {
			vendor_id = String.valueOf(user.getUm_vendor_id());
		}

		List<DailyActivityReport> result = new ArrayList<DailyActivityReport>();
		DailyActivityReport dar = new DailyActivityReport();
		ActionResponse<DailyActivityReport> response = new ActionResponse();

		if (user.getUm_vendor_id() != null) {
			vendor_id = String.valueOf(user.getUm_vendor_id());
			System.err.println(vendor_id + "-0----");
		} else
			vendor_id = request.getParameter("team_id");

		// Inward productivity report
		if (report_id.equals("1")) {
			/* System.out.println("inward productivity report"); */

			try {
				List reportList = reportsService.getInwardProductivityData(vendor_id, fromDt, toDt, um_id);

				for (int i = 0; i < reportList.size(); i++) {
					Object[] row1 = (Object[]) reportList.get(i);
					/* System.out.println("Element "+i+Arrays.toString(row1)); */
					dar = new DailyActivityReport();
					dar.setParameter1(row1[0].toString());
					dar.setParameter2(row1[1].toString());
					dar.setParameter3(row1[2].toString());
					dar.setParameter4(row1[3].toString());
					dar.setParameter5(row1[4].toString());
					result.add(dar);
				}
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}



------------------------------14 july 2022 -------------------





				dar.setValue2("" + noOfFileCount);
				dar.setValue3("" + previousCountScan);
				dar.setValue4("" + currentCountScan);
				dar.setValue5("" + newlyCountScan);
				dar.setValue6("" +verifierApproved);